{"title":"nix","githubRepo":"aurumsoftware/nix","googleAnalytics":"UA-121885021-1","index":{"title":"Nix","description":"Created to facilitate the customization of the structure of your project.","content":" First highlight. It'll blow your mind. Donec sed odio dui. Etiam porta sem malesuada magna mollis euismod. Nullam id dolor id nibh ultricies vehicula ut id elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros praesent commodo ultricies vehicula ut. It's that good. See for yourself. Donec sed odio dui. Etiam porta sem malesuada magna mollis euismod. Nullam id dolor id nibh ultricies vehicula ut id elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros praesent commodo ultricies vehicula ut. And lastly, this one. Checkmate. Donec sed odio dui. Etiam porta sem malesuada magna mollis euismod. Nullam id dolor id nibh ultricies vehicula ut id elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros praesent commodo ultricies vehicula ut. ","srcFilePath":"src/pages/index.soy","id":"pages","location":"/./","url":"/./","children":{"docs":{"title":"Docs","description":"Everything you need to know to get started.","content":" Docs Start learning how to leverage the power of . Choose a Guide Each one provide step by step coverage for every core feature. ","srcFilePath":"src/pages/docs/index.soy","id":"docs","location":"/docs/","url":"/docs/","children":{"search":{"title":"Search","description":"Find what you're looking for in the documentation.","hidden":true,"content":" Electric Docs Start learning how to leverage the power of . ","srcFilePath":"src/pages/docs/search.soy","id":"search","location":"/docs/search.html","url":"/docs/search.html"},"nix":{"children":{"display":{"title":"Display","layout":"guide","weight":2,"content":" display | CLASS | DESCRIPTION | | :------------| :----------------------------------------- | | .nix-display_none | The element is completely removed | | .nix-display_inline | Displays an element as an inline element. Any height and width properties will have no effect | | .nix-display_inline-block | Displays an element as an inline-level block container. The element itself is formatted as an inline element, but you can apply height and width values | | .nix-display_block | Displays an element as a block element. It starts on a new line, and takes up the whole width | | .nix-display_table | Let the element behave like a table element | | .nix-display_table-cell | Let the element behave like a td element | | .nix-display_table-row | Let the element behave like a tr element | | .nix-display_flex | Displays an element as a block-level flex container | | .nix-display_inline-flex | Displays an element as an inline-level flex container | Responsive example | CLASS | DESCRIPTION | | :------------| :------------------------------------------------------- | | .nix-display_none--xs | --xs suffix only affects device widths of 768px and lower. | | .nix-display_block--sm | --sm suffix only affects device widths of 1024px and lower. | | .nix-display_flex--md | --md suffix only affects device widths of 1200px and lower. | ","srcFilePath":"src/pages/docs/nix/display.md","id":"display","location":"/docs/nix/display.html","url":"/docs/nix/display.html"},"flexbox":{"title":"Flexbox","layout":"guide","weight":3,"content":" These properties require display: flex in the parent for working. Learn flexbox with this guide. justify-content | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-justify-content_start | Items are positioned at the beginning of the container | | .nix-justify-content_end | Items are positioned at the end of the container | | .nix-justify-content_between | Items are positioned with space between the lines | | .nix-justify-content_around | Items are positioned with space before, between, and after the lines | | .nix-justify-content_center | Items are positioned at the center of the container | align-item | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-align-items_stretch | Items are stretched to fit the container | | .nix-align-items_start | Items are positioned at the beginning of the container | | .nix-align-items_end | Items are positioned at the end of the container | | .nix-align-items_center | Items are positioned at the center of the container | | .nix-align-items_baseline | Items are positioned at the baseline of the container | align-content | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-align-content_stretch | Lines stretch to take up the remaining space | | .nix-align-content_start | Lines are packed toward the start of the flex container | | .nix-align-content_end | Lines are packed toward the end of the flex container | | .nix-align-content_center | Lines are packed toward the center of the flex container | | .nix-align-content_between | Lines are evenly distributed in the flex container | | .nix-align-content_arround | Lines are evenly distributed in the flex container, with half-size spaces on either end | align-self | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-align-self_stretch | The element is positioned to fit the container | | .nix-align-self_auto | The element inherits its parent container's align-items property, or \"stretch\" if it has no parent container | | .nix-align-self_start | The element is positioned at the beginning of the container | | .nix-align-self_end | The element is positioned at the end of the container | | .nix-align-self_center | The element is positioned at the center of the container | | .nix-align-self_baseline | The element is positioned at the baseline of the container | flex-direction | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-flex-direction_column | The flexible items are displayed vertically, as a column | | .nix-flex-direction_column-reverse | Same as column, but in reverse order | | .nix-flex-direction_row | The flexible items are displayed horizontally, as a row | | .nix-flex-direction_row-reverse | Same as row, but in reverse order | flex-wrap | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-flex-wrap_wrap | Specifies that the flexible items will wrap if necessary | | .nix-flex-wrap_nowrap | Specifies that the flexible items will not wrap | | .nix-flex-wrap_wrap-reverse | Specifies that the flexible items will wrap, if necessary, in reverse order | flex This defines the size of an element before the remaining space is distributed. | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-flex_auto | Defines an automatic size | | .nix-flex_0 | Defines a minimum size | | .nix-flex_1 | Defines all available space | order order defines the order of an element from 0 until 5. | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-order_0 | Default | | ... | ... | | .nix-order_5 | | Responsive example | CLASS | DESCRIPTION | | :------------| :------------------------------------------------------- | | .nix-align-items_center--xs | --xs suffix only affects device widths of 768px and lower. | | .nix-justify-content_middle--sm | --sm suffix only affects device widths of 1024px and lower. | | .nix-flex-direction_column--md | --md suffix only affects device widths of 1200px and lower. | ","srcFilePath":"src/pages/docs/nix/flexbox.md","id":"flexbox","location":"/docs/nix/flexbox.html","url":"/docs/nix/flexbox.html"},"float":{"title":"Float","layout":"guide","weight":4,"content":" float | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-float_none | The element does not float, (will be displayed just where it occurs in the text). | | .nix-float_left | The element floats to the left of its container | | .nix-float_right | The element floats the right of its container | clear | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-clear_none | Allows floating elements on both sides | | .nix-clear_both | No floating elements allowed on either the left or the right side | | .nix-clear_left | No floating elements allowed on the left side | | .nix-clear_right | No floating elements allowed on the right side | Responsive example | CLASS | DESCRIPTION | | :------------| :------------------------------------------------------- | | .nix-float_none--xs | --xs suffix only affects device widths of 768px and lower. | | .nix-clear_left--sm | --sm suffix only affects device widths of 1024px and lower. | | .nix-clear_right--md | --md suffix only affects device widths of 1200px and lower. | ","srcFilePath":"src/pages/docs/nix/float.md","id":"float","location":"/docs/nix/float.html","url":"/docs/nix/float.html"},"margin":{"title":"Margin","layout":"guide","weight":5,"content":" margin Default margin sizes range from 0px to 100px, with interval of 5. | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-margin_0 | Add margin on all sides | | .nix-margin-top_5 | Add top margin | | .nix-margin-right_10 | Add right margin | | .nix-margin-bottom_15 | Add bottom margin | | .nix-margin-left_20| Add left margin | Responsive example | CLASS | DESCRIPTION | | :------------| :------------------------------------------------------- | | .nix-margin_0--xs | --xs suffix only affects device widths of 768px and lower. | | .nix-margin-top_5--sm | --sm suffix only affects device widths of 1024px and lower. | | .nix-margin-right_10--md | --md suffix only affects device widths of 1200px and lower. | ","srcFilePath":"src/pages/docs/nix/margin.md","id":"margin","location":"/docs/nix/margin.html","url":"/docs/nix/margin.html"},"others":{"title":"Others","layout":"guide","weight":10,"content":" vertical-align The vertical-align CSS property specifies the vertical alignment of an inline or table-cell box. | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-vertical-align_baseline | The element is aligned with the baseline of the parent | | .nix-vertical-align_top | The element is aligned with the top of the tallest element on the line | | .nix-vertical-align_middle | The element is placed in the middle of the parent element | | .nix-vertical-align_bottom| The element is aligned with the lowest element on the line | | .nix-vertical-align_text-top| The element is aligned with the top of the parent element's font | | .nix-vertical-align_text-bottom| The element is aligned with the bottom of the parent element's font | Lorem ipsum dolor sit ammet cursor | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-cursor_default | If overflow is clipped, a scroll-bar should be added to see the rest of the content | | .nix-cursor_pointer | The overflow is clipped, and the rest of the content will be invisible | | .nix-cursor_not-allowed | The overflow is clipped, but a scroll-bar is added to see the rest of the content | overflow | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-overflow_auto | If overflow is clipped, a scroll-bar should be added to see the rest of the content | | .nix-overflow_hidden | The overflow is clipped, and the rest of the content will be invisible | | .nix-overflow_scroll | The overflow is clipped, but a scroll-bar is added to see the rest of the content | | .nix-overflow_visible | The overflow is not clipped. It renders outside the element's box | object-fit The CSS object-fit property is used to specify how an ` or ` should be resized to fit its container. | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-object-fit_fill | This is default. The replaced content is sized to fill the element's content box. If necessary, the object will be stretched or squished to fit | | .nix-object-fit_contain | The replaced content is scaled to maintain its aspect ratio while fitting within the element's content box | | .nix-object-fit_cover | The replaced content is sized to maintain its aspect ratio while filling the element's entire content box. The object will be clipped to fit | | .nix-object-fit_scale-down | The content is sized as if none or contain were specified (would result in a smaller concrete object size) | | .nix-object-fit_none | The replaced content is not resized | Responsive example | CLASS | DESCRIPTION | | :------------| :------------------------------------------------------- | | .nix-white-space_nowrap--xs | --xs suffix only affects device widths of 768px and lower. | | .nix-overflow_hidden--sm | --sm suffix only affects device widths of 1024px and lower. | | .nix-cursor_not-allowed--md | --md suffix only affects device widths of 1200px and lower. | ","srcFilePath":"src/pages/docs/nix/others.md","id":"others","location":"/docs/nix/others.html","url":"/docs/nix/others.html"},"padding":{"title":"Padding","layout":"guide","weight":7,"content":" {$page.description} padding Default padding sizes range from 0px to 100px, with interval of 5. | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-padding_0 | Add padding on all sides | | .nix-padding-top_5 | Add top padding | | .nix-padding-right_10 | Add right padding | | .nix-padding-bottom_15 | Add bottom padding | | .nix-padding-left_20| Add left padding | Responsive example | CLASS | DESCRIPTION | | :------------| :------------------------------------------------------- | | .nix-padding_0--xs | --xs suffix only affects device widths of 768px and lower. | | .nix-padding-top_5--sm | --sm suffix only affects device widths of 1024px and lower. | | .nix-padding-right_10--md | --md suffix only affects device widths of 1200px and lower. | ","srcFilePath":"src/pages/docs/nix/padding.md","id":"padding","location":"/docs/nix/padding.html","url":"/docs/nix/padding.html"},"position":{"title":"Position","layout":"guide","weight":8,"content":" position | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-position_relative | The element is positioned relative to its normal position | | .nix-padding_absolute | The element is positioned relative to its first positioned (not static) ancestor element | | .nix-padding_fixed | The element is positioned relative to the browser window | | .nix-padding_static | Default value. Elements render in order, as they appear in the document flow | | .nix-padding_sticky| The element is positioned based on the user's scroll position | Responsive example | CLASS | DESCRIPTION | | :------------| :------------------------------------------------------- | | .nix-position_relative--xs | --xs suffix only affects device widths of 768px and lower. | | .nix-padding_absolute--sm | --sm suffix only affects device widths of 1024px and lower. | | .nix-padding_fixed--md | --md suffix only affects device widths of 1200px and lower. | ","srcFilePath":"src/pages/docs/nix/position.md","id":"position","location":"/docs/nix/position.html","url":"/docs/nix/position.html"},"sizing":{"title":"Sizing","layout":"guide","weight":6,"content":" width | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-width_auto | Set width to auto | | .nix-width_0 | Set width to 0 | | .nix-width_25 | Set width to 25% | | .nix-width_50 | Set width to 50% | | .nix-width_75 | Set width to 75% | | .nix-width_100 | Set width to 100% | height | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-height_auto | Set height to auto | | .nix-height_0 | Set height to 0 | | .nix-height_25 | Set height to 25% | | .nix-height_50 | Set height to 50% | | .nix-height_75 | Set height to 75% | | .nix-height_100 | Set height to 100% | Responsive example | CLASS | DESCRIPTION | | :------------| :------------------------------------------------------- | | .nix-width_100--xs | --xs suffix only affects device widths of 768px and lower. | | .nix-height_auto--sm | --sm suffix only affects device widths of 1024px and lower. | | .nix-width_50--md | --md suffix only affects device widths of 1200px and lower. | ","srcFilePath":"src/pages/docs/nix/sizing.md","id":"sizing","location":"/docs/nix/sizing.html","url":"/docs/nix/sizing.html"},"text":{"title":"Text","layout":"guide","weight":9,"content":" text-align | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-text-align_left | Aligns the text to the left | | .nix-text-align_right | Aligns the text to the right | | .nix-text-align_center | Centers the text | | .nix-text-align_justify| Stretches the lines so that each line has equal width | text-transform | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-text-transform_none | No capitalization. The text renders as it is. This is default | | .nix-text-transform_lowercase | Transforms all characters to lowercase | | .nix-text-transform_uppercase | Transforms all characters to uppercase | | .nix-text-transform_capitalize| Transforms the first character of each word to uppercase | font-weight | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-font-weight_normal | Defines normal characters. This is default | | .nix-font-weight_bold | Defines thick characters | | .nix-font-weight_bolder | Defines thicker characters | | .nix-font-weight_lighter| Defines lighter characters | font-style | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-font-style_normal | The browser displays a normal font style. This is default | | .nix-font-style_italic | The browser displays an italic font style | | .nix-font-style_oblique | The browser displays an oblique font style | white-space | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-white-space_normal | Sequences of whitespace will collapse into a single whitespace. Text will wrap when necessary | | .nix-white-space_nowrap | Sequences of whitespace will collapse into a single whitespace. Text will never wrap to the next line. The text continues on the same line until a `` tag is encountered | | .nix-white-space_pre | Whitespace is preserved by the browser. Text will only wrap on line breaks. Acts like the `` tag in HTML | text-overflow | CLASS | DESCRIPTION | | :------------| :----------------------------------- | | .nix-text-overflow_clip | Default value. The text is clipped and not accessible | | .nix-text-overflow_ellipsis | Render an ellipsis (\"...\") to represent the clipped text | | .nix-text-overflow_initial | Sets this property to its default value | | .nix-text-overflow_inherit | Inherits this property from its parent element | Responsive examples | CLASS | DESCRIPTION | | :------------| :------------------------------------------------------- | | .nix-text-align_center--xs | --xs suffix only affects device widths of 768px and lower. | | .nix-text-transform_uppercase--sm | --sm suffix only affects device widths of 1024px and lower. | | .nix-font-style_italic--md | --md suffix only affects device widths of 1200px and lower. | ","srcFilePath":"src/pages/docs/nix/text.md","id":"text","location":"/docs/nix/text.html","url":"/docs/nix/text.html"}},"title":"nix","description":"This library was created to help you customize the structure of your project with classes that change properties such as margins and alignments, including support for responsive.","layout":"guide","icon":"code-file","weight":1,"content":" {$page.description} Getting started Download Nix from repository or install the package aurum-nix: yarn add aurum-nix and import into your project: Usage Write the classes as you would write css properties and values separating with _ between properties and the values. By default, the classes have a prefix nix- that you should apply before the class name. You can use the responsive classes with the suffix --xs for screens up to 768px (mobile), --sm for screens up to 1024px (tablets and small screens), --md for screens up to 1200px (medium screens) and --lg for screens up to 1600px (large screens). Customization You can customize it for your own project, change the values of variables then import the Nix file node_modules/aurum-nix/nix in your Sass file. Prefix variable Change the prefix name to your preferred: $prefix: 'nix-'; // nix- is default In this example, your class will be nix-diplay_block. or set the prefix to a blank value: $prefix: ''; With this example, your class name will be diplay_block. Breakpoints variables $xs: 768px; // screens up to 768px (mobile) $sm: 1024px; // screens up to 1024px (tablet/small desktops) $md: 1200px; // screens up to 1200px (medium desktops) $lg: 1600px; // screens up to 1600px (large desktops) Sizes variables These sizes are used for margins and paddings: $int-size: 5; // every 5px $max-size: 100; // up to 100px $int-size is the interval variable to sizes, and $max-size is the max size to generate. Generate your custom values Clone the Nix repository; Run yarn to install dependencies; Run yarn build:nix to build or yarn watch:nix to watch the changes; ","srcFilePath":"src/pages/docs/nix/index.md","id":"nix","location":"/docs/nix/","url":"/docs/nix/","childIds":["display","flexbox","float","margin","sizing","padding","position","text","others"]}},"childIds":["nix","search"]}},"childIds":["docs"]}}